{"version":3,"sources":["loading.svg","IMDb_logo.svg","cinema.svg","tmdb.svg","components/HeaderBar.js","components/About.js","components/HeaderMenu.js","components/Header.js","components/FavoriteItem.js","components/FavoritesList.js","components/MovieItem.js","components/MovieList.js","components/YearFilter.js","components/RatingFilter.js","components/MovieFilter.js","components/DefaultView.js","components/HomeView.js","components/StarRating.js","components/DetailStub.js","components/MovieDetail.js","components/PersonDetail.js","components/CastItem.js","components/CrewItem.js","components/PersonnelList.js","components/DetailsView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderBar","props","className","to","src","logo","alt","About","href","title","HeaderMenu","state","modalIsOpen","openModal","bind","afterOpenModal","closeModal","this","setState","onClick","isOpen","onAfterOpen","onRequestClose","ariaHideApp","contentLabel","React","Component","HeaderApp","FavoriteItem","handleRemove","removeId","id","removeFav","poster","icon","faTrashAlt","FavoritesList","hidden","handleHiden","newHidden","arrow","faAngleDoubleRight","faAngleDoubleLeft","CSSTransition","in","timeout","classNames","unmountOnExit","appear","TransitionGroup","component","favorites","map","fav","ind","key","MovieItem","handleView","filmID","handleFavorite","newFav","addFav","year","split","rating","faHeart","MovieList","selected","reverse","sortValue","e","sortOrder","sortTitle","currentTarget","value","sortYear","sortRating","sortMovies","display","movies","length","loading","titleArrow","faSortDown","faSortUp","yearArrow","ratingArrow","name","m","ratings","average","release_date","YearFilter","handleRadioChange","target","updatedFilter","document","querySelector","nextElementSibling","handleYearChange","type","checked","onChange","disabled","handleChange","RatingFilter","below","above","betweenLow","betweenHigh","handleRatingChange","handleRatingsChange","ratingVal","changingProperty","min","max","MovieFilter","filterCritiria","yearUpper","ratingLower","ratingUpper","handleSubmit","preventDefault","console","log","filter","hidePanel","clearFilters","clear","handleRadioButtonChange","lowerBound","upperBound","lowerTitle","upperTitle","onSubmit","DefaultView","sortBy","sortedMovies","filteredMovies","sort","filtered","filterByTitle","filterList","filterByYear","filterByRating","movie","toLowerCase","indexOf","today","Date","getFullYear","parseInt","location","search","movieObj","localStorage","getItem","JSON","parse","fetch","response","json","setItem","stringify","a","b","nameA","toUpperCase","nameB","yearA","yearB","ratingA","ratingB","Header","HomeView","handleInput","updatedSearch","style","backgroundImage","height","backgroundSize","backgroundPosition","backgroundRepeat","StarRating","fullStar","faStar","emptyStar","faStarRegular","halfStar","faStarHalfAlt","ratingArr","xxd","xx","d","Math","round","i","s","push","DetailStub","data","MovieDetail","width","modalWidth","baseURL","posterURL","modalURL","tmdbURL","imdbURL","changeFavorites","film","faves","add","rmv","find","f","posterModal","revenue","Number","parseFloat","toPrecision","tagline","details","overview","tmdb_id","tmdbLogo","imdb_id","imdbLogo","production","companies","countries","keywords","genres","PersonDetail","viewFilm","image","birthday","place_of_birth","biography","imdb","CastItem","viewCredit","character","CrewItem","department","job","PersonnelList","switchView","viewIsCast","castList","order","c","index","crewList","DetailsView","castID","filmView","castMember","filmStorageID","movieURL","resp","prevProps","prevState","creditURL","creditData","cast","crew","profile_path","require","config","App","viewMovie","viewFilmID","addToFavorites","favorite","newFavorites","removeFromFavorites","path","exact","match","render","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9140a01d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.8375fc44.svg\";","module.exports = __webpack_public_path__ + \"static/media/IMDb_logo.64099c07.svg\";","module.exports = __webpack_public_path__ + \"static/media/cinema.c320d72e.svg\";","module.exports = __webpack_public_path__ + \"static/media/tmdb.4906bce9.svg\";","import React from 'react'; \r\nimport logo from '../cinema.svg'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeaderBar = function (props) {   \r\n    return (         \r\n        <div className=\"header-title\">             \r\n           <Link to='/' >\r\n                <img src={logo} alt=\"JAWMDB\" className=\"logo\" />    \r\n            </Link>        \r\n        </div>            \r\n    ); \r\n} \r\nexport default HeaderBar; ","import React from 'react'\r\n\r\nconst About = function (props) {\r\n    return (\r\n        <div>\r\n            <p>JAWMDB (Jason Austin Watched Movies Data Base) App made by Jason and Austin.</p>\r\n            <p>Github link: <a href=\"https://github.com/keposet/web3_asg1\">https://github.com/keposet/web3_asg1</a></p>\r\n            <br></br>\r\n            <p>Film Metadata povided by <a href=\"https://www.themoviedb.org/\">The Movie Database</a></p>\r\n            <br></br>\r\n            <p>Technology used:</p>\r\n            <ul>\r\n                <li>React-Modal: <a href=\"https://www.npmjs.com/package/react-modal\">react-modal npm</a> </li>\r\n                <li>React-Modal: <a href=\"https://www.npmjs.com/package/react-modal\">react-modal npm</a> </li>\r\n                <li>Loading svg \"Flowing Gradient\" from: <a href=\"https://icons8.com/preloaders/en/free\"> icons8 Preloaders</a></li>\r\n                <li>Logo Icon made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></li>\r\n                <li>Hero Image <a href='https://images.unsplash.com/photo-1542204165-65bf26472b9b'>\"8mm filmrolls\"</a> From: Denise Jans <a href=\"https://unsplash.com/@dmjdenise\">@dmjdenise</a></li>\r\n                <li><a href=\"https://unsplash.com/photos/4PxJ_9wEQyI\"></a>Curtain Image credit to unsplash user <a href=\"https://unsplash.com/@djpaine\">DJ Paine</a></li>\r\n                <li>Font Awesome Icons from <a href=\"https://fontawesome.com/how-to-use/on-the-web/using-with/react\">react-fontawesome</a> </li>\r\n                <li>CSSTransition Group used for <a href=\"http://reactcommunity.org/react-transition-group/css-transition\">animations</a></li>\r\n            </ul>\r\n            <p>Code credit:</p>\r\n            <ul>\r\n                <li>React Router query sting basics from: <a href=\"https://tylermcginnis.com/react-router-query-strings/\">Tyler McGinnis</a></li>\r\n                <li>React CSSTransition basics from <a href=\"https://blog.logrocket.com/improve-your-ui-with-react-transition-group-999fa35f7cae/\"> LogRocket.com</a></li>\r\n                <li>CSS help: <a href=\"https://stackoverflow.com/questions/47881767/\" >for adding commas</a> from user <a href=\"https://stackoverflow.com/users/5157454/ori-drori\" >Ori Dori</a></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react'; \r\nimport Modal from 'react-modal'\r\nimport About from './About'\r\n\r\nclass HeaderMenu extends React.Component {   \r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            modalIsOpen: false\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({modalIsOpen: true})\r\n    }\r\n\r\n    afterOpenModal(){\r\n        //Funtion needed for modal to compile\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState( { modalIsOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (       \r\n            <nav className=\"header-menu\">           \r\n                <button onClick={this.openModal}>About</button>   \r\n\r\n                <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.afterOpenModal}\r\n                    onRequestClose={this.closeModal}\r\n                    ariaHideApp={false}\r\n                    className='modal-dialog'\r\n                    contentLabel=\"Example Modal\"\r\n                >\r\n                    <h2 >Web Assignment 1</h2>\r\n                    <About />\r\n                    <button onClick={this.closeModal}>close</button>\r\n                    \r\n                </Modal>\r\n            </nav>          \r\n        ); \r\n    }\r\n} \r\nexport default HeaderMenu;","import React from 'react'; \r\nimport HeaderBar from './HeaderBar.js'; \r\nimport HeaderMenu from './HeaderMenu.js'; \r\nconst HeaderApp = function (props) {     \r\n    return (         \r\n        <header className=\"header\">           \r\n            <HeaderBar />           \r\n            <HeaderMenu />         \r\n        </header>         \r\n    ); \r\n} \r\nexport default HeaderApp;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nclass FavoriteItem extends React.Component {   \r\n    handleRemove = () => {\r\n        const removeId = this.props.id;\r\n        this.props.removeFav(removeId);\r\n    }\r\n    render() {\r\n        const url = \"https://image.tmdb.org/t/p/w92\";\r\n        return (       \r\n            <li className=\"favorite\">\r\n                <Link to='filminfo' >\r\n                    <img src={`${url}${this.props.poster}`} className=\"later\" alt={ this.props.title } title={ this.props.title }/>\r\n                </Link>\r\n                <button className=\"closeButton\" onClick={ this.handleRemove }>\r\n                    <FontAwesomeIcon icon={ faTrashAlt }/>\r\n                </button>\r\n            </li>       \r\n        ); \r\n    }\r\n} \r\nexport default FavoriteItem;","import React from 'react';\r\nimport FavoriteItem from \"./FavoriteItem\";\r\nimport { CSSTransition, TransitionGroup, } from 'react-transition-group';\r\nimport './Favorites.css'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faAngleDoubleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass FavoritesList extends React.Component {\r\n    state = {hidden: false};\r\n\r\n    handleHiden = () =>{\r\n        const newHidden = !this.state.hidden;\r\n        this.setState( { hidden: newHidden } );\r\n    }\r\n    render() {\r\n        //Display a left arrow when showing the favorites list, show  a right arrow when the list is hidden\r\n        const arrow = (this.state.hidden) ? (<FontAwesomeIcon icon={faAngleDoubleRight}/>) : (<FontAwesomeIcon icon={faAngleDoubleLeft}/>);\r\n        return (\r\n            <div className=\"favorites-bar\">\r\n                <h3> Favorites </h3>\r\n                <div onClick={this.handleHiden}>{arrow}</div>\r\n                \r\n                <CSSTransition\r\n                    in={!this.state.hidden}\r\n                    timeout={500}\r\n                    classNames=\"display\"\r\n                    unmountOnExit\r\n                    appear\r\n                > \r\n                    <ul className=\"favorites\">\r\n                        <TransitionGroup component={null}>\r\n                        {   this.props.favorites.map( (fav, ind) => \r\n                            <CSSTransition\r\n                                key={fav.title}\r\n                                timeout={300}\r\n                                classNames=\"display\"\r\n                                unmountOnExit\r\n                                appear\r\n                            > \r\n                                <FavoriteItem \r\n                                    poster={fav.poster} \r\n                                    id={fav.id} \r\n                                    title={fav.title}  \r\n                                    removeFav={ this.props.removeFav } \r\n                                    key={ind}\r\n                                />\r\n                            </CSSTransition>\r\n                            )\r\n                        }\r\n                        </TransitionGroup>\r\n                    </ul>\r\n                </CSSTransition>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default FavoritesList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass MovieItem extends React.Component {\r\n    handleView = () => {\r\n        this.props.handleView(this.props.filmID);\r\n    }\r\n    \r\n    handleFavorite = () => {\r\n        const newFav = { poster:this.props.poster, id:this.props.filmID, title:this.props.title};\r\n        this.props.addFav(newFav);\r\n    }\r\n\r\n    render() {\r\n        const url = \"https://image.tmdb.org/t/p/w92\";\r\n        const [year] = this.props.year.split('-');\r\n        return (\r\n            <li className=\"movie-list-item\">\r\n                <Link to='filminfo'\r\n                    filmID={this.props.filmID}\r\n                >\r\n                    <img src={`${url}${this.props.poster}`} alt={this.props.title} onClick={this.handleView} />\r\n                </Link>\r\n                \r\n                <Link to='filminfo'\r\n                    filmID={this.props.filmID}\r\n                >\r\n                    <p onClick={this.handleView}>{this.props.title}</p>\r\n                </Link>\r\n                <p className=\"center-align mi-year\">{year}</p>\r\n                <p className=\"center-align mi-rating\">{this.props.rating}</p>\r\n                <div className=\"favorite-btn\" ><FontAwesomeIcon icon={faHeart} onClick={ this.handleFavorite }/></div>\r\n                <Link to='filminfo'\r\n                    filmID={this.props.filmID}\r\n                >\r\n                    <button onClick={this.handleView}>View</button>\r\n                </Link>\r\n                \r\n            </li>\r\n        )\r\n    }\r\n}\r\nexport default MovieItem;","import React from 'react';\r\nimport MovieItem from './MovieItem';\r\nimport './MovieList.css';\r\nimport loading from '../loading.svg'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSortUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSortDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass MovieList extends React.Component {\r\n    state = { selected:\"title\", reverse:true };\r\n\r\n    sortValue = (e) => {\r\n        //Default sort by title\r\n        let sortOrder = this.props.sortTitle;\r\n\r\n        //See what was selected. If ratings or year sort by that algorithm\r\n        const selected = e.currentTarget.value;\r\n        if( selected === \"year\") {\r\n            sortOrder = this.props.sortYear;\r\n        } else if( selected === \"rating\") {\r\n            sortOrder = this.props.sortRating;\r\n        }\r\n        //Set the reverse order to (the current selected and the opposite of the previous revresal choice)\r\n        const reverse = (this.state.selected === selected) && !this.state.reverse;\r\n\r\n        //Sort the movie list based on chosen sort method (title, year, or rating) and whether or not to reverse the order\r\n        this.props.sortMovies(sortOrder, reverse);\r\n        this.setState( { selected: selected , reverse: reverse});\r\n    }\r\n    render() {\r\n        const display = this.props.movies.length > 0 || this.props.loading;\r\n        const titleArrow = (this.state.selected === \"title\" && this.state.reverse) ? (<FontAwesomeIcon icon={faSortDown}/>) : (<FontAwesomeIcon icon={faSortUp}/>);\r\n        const yearArrow = (this.state.selected === \"year\" && !this.state.reverse) ? (<FontAwesomeIcon icon={faSortDown}/>) : (<FontAwesomeIcon icon={faSortUp}/>);\r\n        const ratingArrow = (this.state.selected === \"rating\" && !this.state.reverse) ? (<FontAwesomeIcon icon={faSortDown}/>) : (<FontAwesomeIcon icon={faSortUp}/>);\r\n        return ( \r\n            <div className=\"movie-list\">\r\n                <h2 className=\"list-heading\">List/Match</h2>\r\n                <h3 className=\"movie-title center-align\"><button name=\"title\" value=\"title\" onClick={ this.sortValue}>Title {titleArrow} </button></h3>\r\n                <h3 className=\"center-align\"><button name=\"year\" value=\"year\" onClick={ this.sortValue}>Year {yearArrow} </button></h3>\r\n                <h3 className=\"center-align\"><button name=\"rating\" value=\"rating\" onClick={ this.sortValue}>Rating {ratingArrow} </button></h3>\r\n                <div className=\"empty-search\" hidden={ display }> Your search found no results</div>\r\n                <img className=\"loading\" src={loading} alt=\"loading\" hidden={ !this.props.loading }/>\r\n                \r\n       \r\n                <ul className=\"movies\">\r\n                    {this.props.movies.map( (m) => \r\n                        <MovieItem \r\n                            title={m.title} \r\n                            poster={m.poster} \r\n                            rating={m.ratings.average} \r\n                            year={m.release_date} \r\n                            filmID={m.id}\r\n                            handleView={this.props.handleView}\r\n                            addFav={ this.props.addFav }\r\n                            key={m.id} \r\n                        /> \r\n                    ) }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MovieList;\r\n","import React from 'react';\r\n\r\nclass YearFilter extends React.Component {\r\n    state = { selected:\"\" };\r\n\r\n    handleRadioChange = (e) => {\r\n        const selected = e.target.value;\r\n        const updatedFilter = {};\r\n        //Reset year and year upper to thier defaults (Lowest and highest)\r\n            // \"\" is handled by the yearFilter to set to current year on null and empty strings\r\n        updatedFilter['year'] = -1;\r\n        updatedFilter['yearUpper'] = \"\";\r\n\r\n        //Set the select radios imputs as the current filter\r\n        if(selected === \"BETWEEN\") {\r\n            updatedFilter['yearUpper'] = document.querySelector(\"input[name='yearUpper'].between\").value;\r\n            updatedFilter['year'] = document.querySelector(\"input[name='year'].between\").value;\r\n        } else {\r\n            updatedFilter[e.target.nextElementSibling.name] = e.target.nextElementSibling.value;  \r\n        }\r\n\r\n        //Propigatet filter change up to DefaultView\r\n        this.props.handleYearChange(updatedFilter['year'], updatedFilter['yearUpper'], 'year', 'yearUpper');\r\n\r\n        //Set the selected radio button as current selection\r\n        this.setState({ selected:selected });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <label className=\"filter-label\"> \r\n                <div className=\"filter-heading\">Year</div>\r\n                <label > \r\n                    <input \r\n                        className=\"radio-input\" \r\n                        type=\"radio\" \r\n                        value=\"BEFORE\"\r\n                        checked={this.state.selected === \"BEFORE\"} \r\n                        onChange={this.handleRadioChange} /> \r\n                    Before\r\n                    <input className=\"input\" type=\"number\" name=\"yearUpper\" disabled={this.state.selected !== \"BEFORE\"} onChange={this.props.handleChange}/>\r\n                </label> \r\n\r\n\r\n                <label> \r\n                    <input \r\n                        className=\"radio-input\" \r\n                        type=\"radio\" \r\n                        value=\"AFTER\" \r\n                        checked={this.state.selected === \"AFTER\"} \r\n                        onChange={this.handleRadioChange} /> \r\n                    After\r\n                    <input className=\"input\" type=\"number\" name=\"year\" disabled={this.state.selected !== \"AFTER\"} onChange={this.props.handleChange}/>\r\n                </label> \r\n\r\n                <label> \r\n                    <input \r\n                        className=\"radio-input\" \r\n                        type=\"radio\" \r\n                        value=\"BETWEEN\" \r\n                        checked={this.state.selected === \"BETWEEN\"} \r\n                        onChange={this.handleRadioChange} /> \r\n                    Between\r\n                    <div className=\"input\">\r\n                        <input className=\"between\" type=\"number\" name=\"year\" disabled={this.state.selected !== \"BETWEEN\"} onChange={this.props.handleChange}/>\r\n                        <input className=\"between\" type=\"number\" name=\"yearUpper\" disabled={this.state.selected !== \"BETWEEN\"} onChange={this.props.handleChange}/>\r\n                    </div>\r\n                    \r\n                </label> \r\n            </label>\r\n        );\r\n    }\r\n}\r\nexport default YearFilter;\r\n","import React from 'react';\r\n\r\nclass RatingFilter extends React.Component {\r\n    state = { selected:\"\", below: 10, above: 10, betweenLow: 10, betweenHigh: 10 };\r\n\r\n    handleRadioChange = (e) => {\r\n        const selected = e.target.value;\r\n        const updatedFilter = {};\r\n        //Reset the ratings values to their default values (lowest possible and highest)\r\n        updatedFilter['ratingLower'] = -1;\r\n        updatedFilter['ratingUpper'] = 11;\r\n\r\n        //Set the upper and lower bounds depending on which radio button got picked\r\n        if(selected === \"BETWEEN\") {\r\n            updatedFilter['ratingUpper'] = this.state.betweenHigh;\r\n            updatedFilter['ratingLower'] = this.state.betweenLow;\r\n        } else {\r\n            updatedFilter[e.target.nextElementSibling.name] = e.target.nextElementSibling.value; \r\n        }\r\n        \r\n        //Propigate the change up to default view and set the current radio button to the selected value\r\n        this.props.handleRatingChange(updatedFilter['ratingLower'], updatedFilter['ratingUpper'], 'ratingLower', 'ratingUpper');\r\n        this.setState({ selected:selected });\r\n    }\r\n\r\n    handleRatingsChange = (e) => {\r\n        //Propigate changed value up to default view for view changes\r\n        this.props.handleChange(e);\r\n\r\n        //Update the text box related to the range that was modified\r\n        let ratingVal = e.currentTarget.value;\r\n        let changingProperty = \"betweenHigh\";\r\n        if(this.state.selected === \"BELOW\") {\r\n           changingProperty = \"below\";\r\n        } else if (this.state.selected === \"ABOVE\") {\r\n           changingProperty = \"above\";\r\n        } else if (this.state.selected === \"BETWEEN\" && e.currentTarget.name === \"ratingLower\") {\r\n            changingProperty = \"betweenLow\";\r\n        }\r\n        this.setState( { [changingProperty]: ratingVal});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <label className=\"filter-label\">\r\n                <div className=\"filter-heading\">Rating</div>\r\n                <label> \r\n                    <input \r\n                        className=\"radio-input\" \r\n                        type=\"radio\" \r\n                        value=\"BELOW\"\r\n                        checked={this.state.selected === \"BELOW\"} \r\n                        onChange={this.handleRadioChange} \r\n                    /> \r\n                    Below  \r\n                    <input \r\n                        className=\"input\" type=\"range\" name=\"ratingUpper\" \r\n                        min=\"0\" max=\"10\" \r\n                        onChange={ this.handleRatingsChange } \r\n                        disabled={this.state.selected !== \"BELOW\"} \r\n                    /> \r\n                    \r\n                </label> \r\n                    <span>{this.state.below}</span>\r\n                <label>\r\n                    <input \r\n                        className=\"radio-input\" \r\n                        type=\"radio\" \r\n                        value=\"ABOVE\" \r\n                        checked={this.state.selected === \"ABOVE\"} \r\n                        onChange={this.handleRadioChange}\r\n                    /> \r\n                    Above \r\n                    <input \r\n                        className=\"input\" \r\n                        type=\"range\"  \r\n                        name=\"ratingLower\" \r\n                        min=\"0\" max=\"10\" \r\n                        onChange={ this.handleRatingsChange } \r\n                        disabled={this.state.selected !== \"ABOVE\"} \r\n                        /> \r\n                </label>\r\n                <span>{this.state.above}</span>\r\n\r\n                <label>\r\n                    <input \r\n                        className=\"radio-input\" \r\n                        type=\"radio\" \r\n                        value=\"BETWEEN\" \r\n                        checked={this.state.selected === \"BETWEEN\"} \r\n                        onChange={this.handleRadioChange}\r\n                    /> \r\n                    Between \r\n                    <input className=\"input\" type=\"range\" \r\n                        name=\"ratingLower\" \r\n                        min=\"0\" max=\"10\"  \r\n                        onChange={ this.handleRatingsChange } \r\n                        disabled={this.state.selected !== \"BETWEEN\"} />   \r\n                        \r\n                    <input className=\"between input\" type=\"range\" \r\n                        name=\"ratingUpper\" min=\"0\" max=\"10\"  \r\n                        onChange={ this.handleRatingsChange } \r\n                        disabled={this.state.selected !== \"BETWEEN\"} /> \r\n                        \r\n                </label>\r\n                <div className=\"between\">\r\n                    <span>{this.state.betweenLow}</span>\r\n                    <span>{this.state.betweenHigh}</span>\r\n                </div>\r\n            </label>\r\n        );\r\n    }\r\n}\r\nexport default RatingFilter;\r\n","import React from 'react';\r\nimport YearFilter from './YearFilter'\r\nimport RatingFilter from './RatingFilter';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faAngleDoubleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport './Filter.css'\r\n\r\nclass MovieFilter extends React.Component {\r\n    state = {filterCritiria: { title:\"\", yearUpper:\"\", year:\"\", ratingLower:\"\", ratingUpper:\"\" }, hidden: false};\r\n\r\n    handleSubmit = (e) => {\r\n        //Send the current filter critieria to the defualt view so the movie list can be filtered\r\n        e.preventDefault();\r\n        console.log(this.state.filterCritiria);\r\n        this.props.filter(this.state.filterCritiria);\r\n    }\r\n    \r\n    hidePanel = () =>{\r\n        const newHidden = !this.state.hidden;\r\n        this.setState( { hidden: newHidden } );\r\n    }\r\n\r\n    clearFilters = (e) => {\r\n        this.props.clear();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const updatedFilter = {...this.state.filterCritiria};\r\n        updatedFilter[e.currentTarget.name] = e.currentTarget.value;\r\n        this.setState( { filterCritiria: updatedFilter} );\r\n    }\r\n\r\n    handleRadioButtonChange = (lowerBound, upperBound, lowerTitle, upperTitle) => {\r\n        const updatedFilter = {...this.state.filterCritiria};\r\n        updatedFilter[lowerTitle] = lowerBound;\r\n        updatedFilter[upperTitle] = upperBound;\r\n        this.setState( {filterCritiria: updatedFilter} );\r\n    }\r\n\r\n    render() {\r\n        const arrow = (this.state.hidden) ? (<FontAwesomeIcon icon={faAngleDoubleRight}/>) : (<FontAwesomeIcon icon={faAngleDoubleLeft}/>);\r\n        return(\r\n            <form className=\"filter\" onSubmit={this.handleSubmit} >\r\n                <CSSTransition\r\n                        in={!this.state.hidden}\r\n                        timeout={350}\r\n                        classNames=\"hide\"\r\n                        unmountOnExit\r\n                        appear\r\n                    > \r\n                <fieldset id=\"box\">\r\n                    <legend>Movie Filter</legend>\r\n\r\n                    <div className=\"filter-label\">\r\n                        <label className=\"filter-heading\">Title</label>\r\n                        <input className=\"input\" type=\"text\" name=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    \r\n\r\n                    <YearFilter handleChange={ this.handleChange } handleYearChange={ this.handleRadioButtonChange } />\r\n                    <RatingFilter handleChange={ this.handleChange } handleRatingChange={ this.handleRadioButtonChange }/>\r\n\r\n                    <button>Filter</button>\r\n                    <button className=\"clear-btn\" type=\"button\" onClick={this.clearFilters}>Clear</button>\r\n\r\n                </fieldset>\r\n                </CSSTransition>\r\n            <button type=\"button\" onClick={this.hidePanel}>{arrow}</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default MovieFilter;\r\n","import React from 'react'; \r\nimport Header from './Header.js';\r\nimport  FavoritesList from './FavoritesList.js';\r\nimport MovieList from './MovieList.js';\r\nimport MovieFilter from './MovieFilter.js';\r\n\r\nclass DefaultView extends React.Component {   \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading:true,\r\n            movies:[], \r\n            filteredMovies:[]\r\n        };\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        try {\r\n            //Check for query string\r\n            let [,search] = this.props.location.search.split(\"=\");\r\n            \r\n            //Check if the movies have been stored in local.\r\n            const movieObj = localStorage.getItem('movies');\r\n            let movies = JSON.parse(movieObj);\r\n            //If they are not, fetch the movies from the API\r\n            if(movies == null || movies == \"\") {\r\n                const movieUrl = \"http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies-brief.php?id=ALL\";\r\n                const response = await fetch(movieUrl);\r\n                movies = await response.json();\r\n\r\n                //once the movies have been fetched store them localy for quicker loading times\r\n                localStorage.setItem('movies', JSON.stringify(movies));\r\n            }\r\n\r\n            //Sort the movies the movies before displaying them.\r\n            let filteredMovies = this.filterByTitle(movies, search);\r\n            filteredMovies.sort( this.sortTitle );\r\n            this.setState( { loading:false, movies: movies, filteredMovies: filteredMovies} );\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Method to be called by the movie list. \r\n    //This method takes a sorting function and a boolean on whether the list should be reversed\r\n    sortMovies = (sortBy, reverse) => {\r\n        const sortedMovies = [...this.state.filteredMovies];\r\n        sortedMovies.sort( sortBy );\r\n        if ( reverse ) {\r\n            sortedMovies.reverse();\r\n        }\r\n        this.setState( { filteredMovies: sortedMovies });\r\n    }\r\n\r\n    //A set of sorting functions used by the movie list\r\n      // Either, sort by title, year, or rating\r\n    sortTitle(a,b) {\r\n        var nameA = a.title.toUpperCase();\r\n        var nameB = b.title.toUpperCase();\r\n        if (nameA < nameB) {\r\n            return -1;\r\n            }\r\n        if (nameA > nameB) {\r\n            return 1;\r\n            }\r\n        return 0\r\n    }\r\n    sortYear(a,b){\r\n        var yearA = a.release_date;\r\n        var yearB = b.release_date;\r\n        if (yearA < yearB) {\r\n            return -1;\r\n            }\r\n        if (yearA > yearB) {\r\n            return 1;\r\n            }\r\n        return 0\r\n    }\r\n    sortRating(a,b){\r\n        var ratingA = a.ratings.average;\r\n        var ratingB = b.ratings.average;\r\n        if (ratingA < ratingB) {\r\n            return -1;\r\n            }\r\n        if (ratingA > ratingB) {\r\n            return 1;\r\n            }\r\n        return 0\r\n    }\r\n\r\n    //Function used by MovieFilter to clear all filters and display all movies\r\n    clear = () => {\r\n        const filtered = this.filterByTitle(this.state.movies, \"\");\r\n        filtered.sort( this.sortTitle );\r\n        this.setState( { filteredMovies: filtered } );\r\n    }\r\n\r\n    //Function used by MovieFilter, filters the movies array based on given Title, year range, and rating range.\r\n      // as defined in filterList (title:\"\", yearupper:\"\", yearlower:\"\", ratingUpper:\"\", raringLower:\"\")\r\n    filter = (filterList) => {\r\n        let filtered = this.filterByTitle(this.state.movies, filterList.title);\r\n        filtered = this.filterByYear(filtered, filterList.year, filterList.yearUpper);\r\n        filtered = this.filterByRating(filtered, filterList.ratingLower, filterList.ratingUpper);\r\n        filtered.sort( this.sortTitle );\r\n        this.setState( {filteredMovies: filtered } );\r\n    }\r\n\r\n    //Function used by filter to filter movie array on given title\r\n    filterByTitle = (movies, title) => {\r\n        //Take the list of movies, and for each movie check if the desired title is contained. If not remove it from the list.\r\n        return movies.filter( (movie) => movie.title.toLowerCase().indexOf(title.toLowerCase()) !== -1)\r\n    }\r\n\r\n    //Function used by filter to filter movie array on given Year range ( e.g 1994 -> 2000)\r\n    filterByYear = (movies, lowerBound, upperBound) => {\r\n        //if no lowerbound defined, set to zero as the lowest year\r\n        if(lowerBound == null || lowerBound === \"\") {\r\n            lowerBound = 0;\r\n        }\r\n\r\n        //if no upperBound defined use the current year as the highest year\r\n        if(upperBound == null || upperBound === \"\") {\r\n            let today = new Date();\r\n            upperBound = today.getFullYear();\r\n        }\r\n\r\n        const updatedMovies = movies.filter( (movie) => {\r\n                let [year] = movie.release_date.split('-');\r\n                return year > parseInt(lowerBound, 10) && year < parseInt(upperBound, 10) \r\n            });\r\n        return updatedMovies;\r\n    }\r\n\r\n    //Function used by filter to filter movie array on given Rating range (e.g. 2 -> 8)\r\n    filterByRating = (movies, lowerBound, upperBound) => {\r\n        if(lowerBound == null || lowerBound === \"\") {\r\n            lowerBound = -1;\r\n        }\r\n\r\n        if(upperBound == null || upperBound === \"\") {\r\n            upperBound = 11;\r\n        }\r\n\r\n        return movies.filter( (movie) => movie.ratings.average >= lowerBound && movie.ratings.average <= upperBound );\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (       \r\n            <div className=\"default-view\">\r\n                <Header />\r\n                < FavoritesList favorites={ this.props.favorites } removeFav={ this.props.removeFav }/>\r\n                < MovieFilter filter={this.filter} clear={ this.clear} />\r\n                < MovieList \r\n                    movies={ this.state.filteredMovies }\r\n                    handleView={ this.props.handleView }\r\n                    loading={ this.state.loading }\r\n                    sortTitle={ this.sortTitle }\r\n                    sortYear={ this.sortYear }\r\n                    sortRating={ this.sortRating }\r\n                    sortMovies={ this.sortMovies }\r\n                    addFav={ this.props.addFav }\r\n                 />\r\n               \r\n            </div>         \r\n        ); \r\n    }\r\n\r\n} \r\n\r\nexport default DefaultView;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomeView extends React.Component {\r\n    state = { search: \"\"};\r\n\r\n    handleInput = (e) => {\r\n        let updatedSearch = this.state.search;\r\n        updatedSearch = e.currentTarget.value;\r\n        this.setState( { search: updatedSearch} );\r\n    }\r\n\r\n    render(){\r\n        const imgUrl = \"https://images.unsplash.com/photo-1542204165-65bf26472b9b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1267&q=80\";\r\n        const curtUrl = \"https://images.unsplash.com/photo-1519035350952-38d18a3848cf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\";\r\n        return(\r\n            <div className=\"home-view\"\r\n                style={{\r\n                    backgroundImage: `url(${imgUrl})`,\r\n                    height: '100%',\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center center',\r\n                    backgroundRepeat: 'no-repeat',\r\n                }}>\r\n                <div className=\"movie-browser\">\r\n                    <h1>Movie Browser</h1>\r\n                    <label>Title</label>\r\n                    <input type=\"text\" onChange={ this.handleInput }></input>\r\n                    <div>\r\n                        <Link to='/defaultview?search='>\r\n                            <button>Show all Movies</button>\r\n                        </Link>\r\n                       <Link to={`/defaultview?search=${this.state.search}`} >\r\n                            <button >Search Movies</button>\r\n                        </Link>                        \r\n                    </div>\r\n                   \r\n                </div>\r\n                <p>Image Credit to: Denise Jans <a href=\"https://unsplash.com/@dmjdenise\">@dmjdenise</a> from unsplash</p>\r\n                <img className=\"curtain-call\" src={`${curtUrl}`}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeView;\r\n","import React, { Component } from 'react';\r\n\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faStar as faStarRegular} from \"@fortawesome/free-regular-svg-icons\"\r\nimport { faStarHalfAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass StarRating extends Component {\r\n    render() { \r\n        \r\n    const rating = this.props.rating;\r\n    const fullStar = <FontAwesomeIcon icon={faStar}/>;\r\n    const emptyStar = <FontAwesomeIcon icon={faStarRegular}/>;\r\n    const halfStar = <FontAwesomeIcon icon={faStarHalfAlt}/>;\r\n    const ratingArr = [];\r\n    let xxd = rating;\r\n    let xx = parseInt(xxd, 10);\r\n    let d = xxd - xx;\r\n\r\n    if (d >= 0.7 || d <=0.2){\r\n           xx = Math.round(xxd);\r\n           for (let i = 0; i < 10; i++) {   \r\n               let s = (i < xx)? fullStar: emptyStar;\r\n               ratingArr.push(s);\r\n           }\r\n    }else{\r\n        for (let i = 0; i < 10; i++) {\r\n            if (i === xx) {\r\n                ratingArr.push(halfStar);\r\n            } else {\r\n                let s = (i < xx)? fullStar: emptyStar;\r\n                ratingArr.push(s);\r\n            }\r\n        } \r\n    }\r\n    \r\n    return <div className=\"Star-Rating\">{ ratingArr}</div>;\r\n    }\r\n}\r\n \r\nexport default StarRating;\r\n","import React, { Component } from 'react';\r\n\r\nclass DetailStub extends Component {\r\n    render() {\r\n        const data = this.props.data; \r\n        const title = this.props.title\r\n        return ( \r\n            <div className=\"Stub\">\r\n                <h3>{title}</h3>\r\n                <ul>\r\n                    {data.map(d => <li className=\"stub-info\" key={d.name}>{d.name}</li>)}\r\n                </ul>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DetailStub;","import React, { Component } from 'react';\r\nimport StarRating from './StarRating';\r\nimport DetailStub from \"./DetailStub\";\r\nimport Modal from \"react-modal\";\r\nimport imdbLogo from \"../IMDb_logo.svg\";\r\nimport tmdbLogo from \"../tmdb.svg\";\r\nimport './DetailsView.css';\r\n\r\nclass MovieDetail extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            modalIsOpen:false\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.afterOpenModal = this.afterOpenModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    width = \"w185\";\r\n    modalWidth=\"w500\";\r\n    baseURL=`https://image.tmdb.org/t/p/`;\r\n    posterURL =`${this.baseURL}${this.width}/`;\r\n    modalURL=`${this.baseURL}${this.modalWidth}`;\r\n\r\n\r\n    tmdbURL = \"https://www.themoviedb.org/movie/\";\r\n    imdbURL= \"https://www.imdb.com/title/\";\r\n        \r\n\r\n    changeFavorites= () => {\r\n        console.log(this.props);\r\n        const film = this.props.film;\r\n        const faves = this.props.favorites;\r\n        const add = this.props.addFav;\r\n        const rmv = this.props.removeFav;\r\n        (!faves.find((f)=> f.id === film.id))? add(film): rmv(film.id);\r\n    }\r\n\r\n    posterModal=() => {\r\n        // render modal?\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({modalIsOpen: true})\r\n    }\r\n\r\n    afterOpenModal(){\r\n        //\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState( { modalIsOpen: false});\r\n    }\r\n\r\n    render( ) { \r\n        const film = this.props.film;\r\n        let revenue = film.revenue;\r\n        revenue = revenue/1000000;\r\n        revenue = Number.parseFloat(revenue).toPrecision(5);\r\n\r\n        return ( \r\n            <div className=\"Film-Detail\">\r\n                <div className=\"Title-Card\">\r\n                    <h2 name=\"title\">{film.title}</h2>\r\n                    <img src ={`${this.posterURL}${film.poster}`} \r\n                    alt={film.title}\r\n                    onClick={this.openModal}/>\r\n                    <p>{film.tagline}</p>\r\n                    <button className=\"favorites-button\" onClick={this.changeFavorites}>❤</button>\r\n                </div>\r\n                <div className=\"Film-Data-Card\">\r\n                    <div className=\"Overview-Stub\">\r\n                        <h3>Overview</h3>\r\n                             <p>{film.details.overview}</p>\r\n                    </div>\r\n                    <div className=\"Release-Stub\">\r\n                        <h5>Release Date:</h5>\r\n                        <p>{film.release_date}</p>\r\n                        <h5>Revenue</h5><p>${revenue} Million</p>\r\n                        <h5>Rating</h5>\r\n                        <StarRating rating={film.ratings.average}/>\r\n                        <h5>Links</h5>\r\n                        <p>\r\n                            <a href={`${this.tmdbURL}${film.tmdb_id}`}><img className=\"t-svg\" src={tmdbLogo} alt=\"tmdbLink\"/></a>\r\n                            <a href={`${this.imdbURL}${film.imdb_id}`}><img className=\"i-svg\" src={imdbLogo} alt=\"imdbLink\"/></a>\r\n                        </p>\r\n                    </div>                    \r\n                    <DetailStub title=\"Companies\" data={film.production.companies}/>\r\n                    <DetailStub title=\"Countries\" data={film.production.countries}/>\r\n                         <DetailStub title=\"Keywords\" data={film.details.keywords}/>\r\n                             <DetailStub title=\"Genres\" data={film.details.genres}/>\r\n                    <Modal \r\n                        isOpen={this.state.modalIsOpen}\r\n                        onAfterOpen={this.state.afterOpenModal}\r\n                        onRequestClose={this.state.closeModal}\r\n                        //This takes an object, easier to style in css style={\"background-color:black;\"}\r\n                        ariaHideApp={false}\r\n                        className=\"modal-lightbox\"\r\n                        contentLabel=\"Poster Lightbox\"\r\n                    >\r\n                        <div>\r\n                            <button onClick={this.closeModal}>🔙</button>\r\n                        </div>\r\n                        <img src={`${this.modalURL}${film.poster}`} alt={`${film.title}lightbox`}/>\r\n                        \r\n                    </Modal>\r\n                </div>                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieDetail;","import React, { Component } from 'react';\r\nimport imdb from \"../IMDb_logo.svg\";\r\nimport './PersonDetail.css'\r\n\r\nclass PersonDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    width = \"w185\";\r\n    posterURL =`https://image.tmdb.org/t/p/${this.width}`;\r\n\r\n    viewFilm = () => {\r\n        this.props.viewFilm();\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        <div className=\"Person-Detail\">\r\n            <h2 className=\"nameHead\">Name</h2>\r\n            <h3 className=\"name\">{this.props.name}</h3>\r\n            <img src={`${this.posterURL}${this.props.image}`} alt={this.props.name}/>\r\n            <h5 className=\"birthHead\">Birthday</h5>\r\n            <p className=\"birth\">{this.props.birthday}</p>\r\n            <h5 className=\"placeHead\">Place of Birth</h5>\r\n            <p className=\"place\">{this.props.place_of_birth}</p>\r\n            <h5 className=\"bioHead\">Biography</h5>\r\n            <p className=\"bio\">{this.props.biography}</p>\r\n        <a className=\"actorLink\" href={`https://www.imdb.com/name/${this.props.imdb_id}`}><img src={imdb} alt=\"actor_imdb\"/>  </a>\r\n            <button className=\"Path-Button\" onClick={this.viewFilm}>Return to Film 🎞</button>\r\n        </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default PersonDetail;","import React, { Component } from 'react';\r\nimport './personItem.css'\r\n\r\nclass CastItem extends Component {\r\n\r\n    viewCredit = () => {\r\n        this.props.viewCredit(this.props.id);\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"Cast-Item\">\r\n                <div className=\"Character-Name\">{this.props.character} &nbsp;</div>\r\n                <div className=\"Credit-Name\">{this.props.name}</div>\r\n                <button className=\"Credit-button\" onClick={this.viewCredit}>View🔭</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default CastItem;","import React, { Component } from 'react';\r\nimport './personItem.css'\r\n\r\nclass CrewItem extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Crew-Item\">\r\n                <p className=\"Department-Item\">{this.props.department} &nbsp;</p>\r\n                <p className=\"Job-Item\">{this.props.job} &nbsp;</p>\r\n                <p className=\"Crew-Name-Item\">{this.props.name}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default CrewItem;","import React, { Component } from 'react';\r\nimport CastItem from './CastItem';\r\nimport CrewItem from \"./CrewItem\";\r\n\r\nclass PersonnelList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            viewIsCast: true\r\n        }\r\n    }\r\n\r\n    switchView= () => {\r\n        if(this.state.viewIsCast){\r\n            this.setState({viewIsCast: false})\r\n        }else {this.setState({viewIsCast:true})}\r\n    }\r\n\r\n    render() { \r\n        if (this.state.viewIsCast == true && this.props.castList !== null) {\r\n            const castList = this.props.castList.sort((a,b)=> (a.order <b.order)? -1: 1);\r\n            return(\r\n                <div className=\"Cast-List\">\r\n                    <button className=\"list-view\" onClick={this.switchView}>View Crew</button>\r\n                     <h2 className=\"list-title\">Cast</h2>\r\n                    <div className=\"Person-List\">\r\n                    <div className=\"cast-titles\">\r\n                            <h3 className=\"t1\">Character</h3>\r\n                            <h3 className=\"t2\">Actor</h3>\r\n                        </div>\r\n                    {castList.map( (c,i)=> \r\n                    <CastItem \r\n                        character={c.character} \r\n                        name={c.name} \r\n                        id={c.id} \r\n                        viewCredit={this.props.viewCredit}\r\n                        key={i} \r\n                        index={i} />\r\n                    )}\r\n                    </div>\r\n                </div>\r\n                );\r\n        }else{        \r\n            let crewList = this.props.crewList.sort((a,b)=> (a.department < b.department) ? -1:1);\r\n            crewList = crewList.sort((a,b)=> (a.department === b.department && a.name < b.name)? -1:1);\r\n            \r\n            return (\r\n                <div className=\"Crew-List\">\r\n                    <button onClick={this.switchView}>View Cast</button> \r\n                    <h2  className=\"list-title\">Crew</h2>\r\n                    <div className=\"Person-List\">\r\n                        <div className=\"crew-Titles\">\r\n                            <h3 className=\"t1\">Department</h3>\r\n                            <h3 className=\"t2\">Role</h3>\r\n                            <h3 className=\"t3\">Name</h3>\r\n                        </div>\r\n                    {crewList.map((c,i)=>\r\n                    <CrewItem \r\n                        department={c.department}\r\n                        job={c.job}\r\n                        name={c.name}\r\n                        key={i}\r\n                        index={i}\r\n                    />\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n \r\nexport default PersonnelList;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './Header.js';\r\nimport  FavoritesList from './FavoritesList.js';\r\nimport MovieDetail from './MovieDetail';\r\nimport PersonDetail from './PersonDetail';\r\nimport PersonnelList from './PersonnelList';\r\nimport loading from '../loading.svg'\r\nimport './DetailsView.css';\r\nclass DetailsView extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            film : {},\r\n            castMember : {},\r\n            castID: \"\",\r\n            loading : true,\r\n            filmView : true\r\n        };\r\n    }\r\n\r\n    viewCredit = (id) => {\r\n        if (id !== this.state.castID) {\r\n            this.setState({loading: true, castID: id, filmView: false});    \r\n        }\r\n    }\r\n\r\n    viewFilm = () => {\r\n        this.setState({loading: true, filmView: true});\r\n    }\r\n    \r\n//pull the else, add to CDU\r\n    async componentDidMount() {\r\n        try {\r\n            const filmStorageID = localStorage.getItem('filmID');\r\n            let filmID = JSON.parse(filmStorageID);\r\n            // filmID added to local storage\r\n            if (filmID ===null || filmID === \"\") {\r\n                localStorage.setItem('filmID', JSON.stringify(this.props.filmID))\r\n            }\r\n            // check if props.fid \"\"\r\n            if(this.props.filmID !== \"\" && this.props.filmID !== filmID){\r\n                console.log('shouldnt be here on f5');\r\n                console.log(this.props);\r\n                localStorage.setItem('filmID', JSON.stringify(this.props.filmID))\r\n                filmID = this.props.filmID;\r\n            }\r\n            const movieURL = `http://www.randyconnolly.com/funwebdev/3rd/api/movie/movies.php?id=${filmID}`;\r\n            const resp = await fetch(`${movieURL}`);\r\n            const data = await resp.json();\r\n            this.setState({film: {...data}, loading: false});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }    \r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        // if new cast member then fetch\r\n        if (prevState.castID !=this.state.castID) {\r\n            try {             \r\n                // this should be a node .env\r\n                const creditURL = `https://api.themoviedb.org/3/person/${this.state.castID}?api_key=27e7355f9cd5bf46ffa2ad7726d3c494`;\r\n                const response = await fetch(creditURL);\r\n                const creditData = await response.json();\r\n                this.setState({castMember: {...creditData}, loading:false, filmView: false});\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        //if returning to movie view, load movie data from  state\r\n         } else if (prevState.filmView != this.state.filmView || prevState.film != this.state.film) {\r\n                 this.setState({loading:false});\r\n        }\r\n}\r\n\r\n    render() { \r\n        if (this.state.loading) {\r\n            //render loading gif\r\n            return (\r\n                <img className=\"loading\" src={loading} alt=\"loading\"/>\r\n            );\r\n        } else {\r\n            if (this.state.filmView) {\r\n                return (\r\n                    <div className=\"Detail-View\">\r\n                         <Header />\r\n                        < FavoritesList \r\n                            favorites={ this.props.favorites } \r\n                            removeFav={ this.props.removeFav }\r\n                        />\r\n                            <div className=\"return-holder\">\r\n                                <Link to='defaultview?search='>\r\n                                    <button>Return 🔙</button>\r\n                                </Link>\r\n                            </div>\r\n                        <MovieDetail \r\n                        film={this.state.film}\r\n                        favorites={this.props.favorites}\r\n                        addFav={ this.props.addFav }\r\n                        removeFav={ this.props.removeFav }\r\n                        />\r\n                        <PersonnelList \r\n                            castList={this.state.film.production.cast} \r\n                            crewList={this.state.film.production.crew} \r\n                            viewCredit={this.viewCredit}/>\r\n                        \r\n                        \r\n                    </div>\r\n                );\r\n            }else {\r\n                return (\r\n                    <div className=\"Detail-View\">\r\n                        <Header />\r\n                        < FavoritesList \r\n                            favorites={ this.props.favorites } \r\n                            removeFav={ this.props.removeFav }\r\n                        />\r\n                        <PersonDetail \r\n                            name={this.state.castMember.name}\r\n                            image={this.state.castMember.profile_path}\r\n                            imdb_id={this.state.castMember.imdb_id}\r\n                            birthday={this.state.castMember.birthday}\r\n                            biography={this.state.castMember.biography}\r\n                            place_of_birth={this.state.castMember.place_of_birth}\r\n                            viewFilm={this.viewFilm}\r\n                        />\r\n                        <PersonnelList \r\n                            castList={this.state.film.production.cast} \r\n                            crewList={this.state.film.production.crew} \r\n                            viewCredit={this.viewCredit}\r\n                        />\r\n\r\n                    </div>\r\n                );\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n \r\nexport default DetailsView;","import React from 'react';\r\nimport './App.css';\r\nimport DefaultView from './components/DefaultView';\r\nimport { Route } from 'react-router-dom';\r\nimport HomeView from './components/HomeView';\r\nimport DetailsView from './components/DetailsView';\r\nimport {CSSTransition} from 'react-transition-group';\r\nrequire('dotenv').config()\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {   \r\n    super(props);   \r\n    this.state = { \r\n      favorites: [],\r\n      viewFilmID: ''\r\n    }; \r\n  }\r\n  viewMovie = (id) => {\r\n    this.setState({...this.state,viewFilmID : [id]} )\r\n  }\r\n\r\n  addToFavorites = (favorite) => {\r\n      //Take the current list of favorites, if the passed in favorite is not in the list add it to favorites\r\n      let newFavorites = this.state.favorites;\r\n      if( !newFavorites.find( f => f.id === favorite.id)) {\r\n        newFavorites.push( { poster:favorite.poster, id:favorite.id, title:favorite.title } );\r\n        this.setState( { favorites:newFavorites } );\r\n      } \r\n  }\r\n\r\n  removeFromFavorites = (id) => {\r\n      //Look through the favorites array and filter out the movie with the passed in id.\r\n      let newFavorites = this.state.favorites;\r\n      newFavorites = newFavorites.filter( fav => fav.id != id);\r\n      this.setState( { favorites:newFavorites } );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Route path='/' key='/' exact  >\r\n          { ({match}) => (\r\n              <CSSTransition\r\n                  in={match != null}\r\n                  timeout={750}\r\n                  classNames=\"home-page\"\r\n                  unmountOnExit\r\n              >\r\n                <HomeView />\r\n              </CSSTransition>\r\n          )}\r\n        </Route>   \r\n\r\n           \r\n        <Route path='/defaultview' exact \r\n          render={ (props) =>\r\n\r\n            <DefaultView \r\n                {...props}\r\n                  favorites={this.state.favorites}\r\n                  handleView = {this.viewMovie}\r\n                  addFav={ this.addToFavorites }\r\n                  removeFav={ this.removeFromFavorites }\r\n                />\r\n          }\r\n        />\r\n        <Route path='/filminfo' exact\r\n          render={(props) => <DetailsView \r\n            favorites={this.state.favorites}\r\n            addFav={ this.addToFavorites }\r\n            removeFav={ this.removeFromFavorites }\r\n            filmID={this.state.viewFilmID}\r\n            />}\r\n          />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(<BrowserRouter> <App /> </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}